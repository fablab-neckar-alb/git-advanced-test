Git f√ºr Angefangenen und Fortgesrittenen

git branch neuer-branch
git checkout neuer-branch 
beides zusammen
git checkout -b neuer-branch

Ein Zweig mit was anderem, versuchsweise

commit everything modified already in version control
git commit -a

git merge neuer-branch

manueller merge

git cherry-pick 

git flow
ist im wesentlichen eine best practice, wie man branches anlegt und merges verwaltet

Es gibt git-flow plugins

github : fork from FabLabNeckar-Alb github : git@github.com:tatzelbrumm/git-advanced-test.git

user@host:~/Hackerspaces/FabLabNeckarAlb/git2$ git remote add git@github.com:tatzelbrumm/git-advanced-test.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from

user@host:~/Hackerspaces/FabLabNeckarAlb/git2$ git remote add -f -t master fablab-github git@github.com:tatzelbrumm/git-advanced-test.git
Updating fablab-github
warning: no common commits
remote: Counting objects: 15, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 15 (delta 1), reused 15 (delta 1), pack-reused 0
Unpacking objects: 100% (15/15), done.
From github.com:tatzelbrumm/git-advanced-test
 * [new branch]      master     -> fablab-github/master


git stash
git rebase

